---
# Source: renovate-server/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: renovate-server
  labels:
    helm.sh/chart: renovate-server-0.1.0
    app.kubernetes.io/name: renovate-server
    app.kubernetes.io/instance: renovate-server
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  config.yaml: |
    github:
    - api:
        auth:
          oauth:
            token: <my personal github api token>
        baseURL: https://api.github.com/
        uploadURL: https://uploads.github.com/
      projects: []
      webhook:
        path: /github-com
    gitlab:
    - api:
        auth:
          oauth:
            token: <my personal gitlab api token>
        baseURL: https://gitlab.com/
      projects: []
      webhook:
        path: /gitlab-com
    server:
      log:
      - file: stderr
        format: console
        level: verbose
      webhook:
        listen: :8080
        tls:
          caCertData: |
            <PEM ENCODED CA CERTS>
          certData: |
            <PEM ENCODED CERTIFICATE>
          enabled: true
          keyData: |
            <PEM ENCODED CERTIFICATE KEY>
---
# Source: renovate-server/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: renovate-server
  labels:
    helm.sh/chart: renovate-server-0.1.0
    app.kubernetes.io/name: renovate-server
    app.kubernetes.io/instance: renovate-server
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: renovate-server
    app.kubernetes.io/instance: renovate-server
---
# Source: renovate-server/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: renovate-server
  labels:
    helm.sh/chart: renovate-server-0.1.0
    app.kubernetes.io/name: renovate-server
    app.kubernetes.io/instance: renovate-server
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: renovate-server
      app.kubernetes.io/instance: renovate-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: renovate-server
        app.kubernetes.io/instance: renovate-server
    spec:
      securityContext:
        {}
      containers:
        - name: renovate-server
          securityContext:
            {}
          image: "docker.io/arhatdev/renovate-server:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
